# -*- coding: utf-8 -*-
"""Futureintern_DA_01

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1f34ihWdmtJ_XkFvFmPbJVxief-OdgQBa
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

train_data = pd.read_csv('/train.csv')
test_data = pd.read_csv('/test.csv')
gender_submission = pd.read_csv('/gender_submission.csv')

train_data.head()

train_data.info()

train_data.describe()

#check missing values
train_data.isnull()

#sumarize missing values in each column
train_data.isnull() .sum()

#sumarize missing values in each column
test_data.isnull().sum()

#create a box plot to visualize potential outliers
sns.boxplot(x=train_data['Age'])
plt.show()

#create a box plot to visualize potential outliers
sns.boxplot(x = test_data['Age'])
plt.show()

#create a box plot to visualize potential outliers
sns.boxplot(x=train_data['Fare'])
plt.show()

#create a box plot to visualize potential outliers
sns.boxplot(x=test_data['Fare'])
plt.show()

#replace missing values in a age with the mean of the column
train_data['Age'].fillna(train_data['Age'].mean(),inplace=True)
test_data['Age'].fillna(test_data['Age'].mean(),inplace=True)

#replace missing values in a fare with the mean of the column
train_data['Fare'].fillna(train_data['Fare'].mean(),inplace=True)
test_data['Fare'].fillna(test_data['Fare'].mean(),inplace=True)

#cabin has alot of missing values so lets removw the null values from cabin
train_data.drop(columns=['Cabin'],inplace=True)
test_data.drop(columns=['Cabin'],inplace=True)

train_data["Embarked"].value_counts()

#Embarked is a categorical variable, we will replace any missing values
train_data['Embarked'].fillna(train_data['Age'].mean(),inplace=True)
test_data['Embarked'].fillna(test_data['Age'].mean(),inplace=True)

outliers=[]
def detect_outliers(data):
  threshold=3
  mean = np.mean(data)
  std =np.std(data)


  for i in data:
    z_score= (i- mean)/std
    if np.abs(z_score) > threshold:
      outliers.append(y)
  return outliers

from scipy import stats

#calculate the z-score for a column
z_scores = stats.zscore(train_data['Age'])

#identify outliers based on z-score thresgold
outlier_indices =(z_scores > 3 ) |(z_scores < -3)

cleaned_titanic_df = train_data[~outlier_indices]

plt.figure(figsize=(12,6))
sns.boxplot(data = train_data['Age'])
plt.xticks(rotation=45)
plt.show()